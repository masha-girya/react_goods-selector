{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","handleClick","item","setState","this","className","type","onClick","map","good","classNames","Component","ReactDOM","render","document","getElementById"],"mappings":"2PAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAyB,CACvBC,aAAc,OAFlB,EAKEC,YAAc,SAACC,GACb,EAAKC,SAAS,CAAEH,aAAcE,GAC/B,EAPH,4CASE,WAAU,IAAD,OACCF,EAAiBI,KAAKL,MAAtBC,aAER,OACE,uBAAMK,UAAU,oBAAhB,UAEoB,KAAjBL,EACG,oBAAIK,UAAU,QAAd,+BAEA,qBAAIA,UAAU,sCAAd,oBACML,EADN,gBAIE,wBACE,UAAQ,cACRM,KAAK,SACLD,UAAU,cACVE,QAAS,WACP,EAAKJ,SAAS,CAAEH,aAAc,IAC/B,OAKT,uBAAOK,UAAU,QAAjB,SACE,gCACGR,EAAMW,KAAI,SAACC,GAAD,OACT,qBACE,UAAQ,OAERJ,UAAWK,IAAW,CACpB,+BAAgCV,IAAiBS,IAJrD,UAOE,6BAEGT,IAAiBS,EAEd,wBACE,UAAQ,eACRH,KAAK,SACLD,UAAU,iBACVE,QAAS,kBAAM,EAAKN,YAAY,GAAvB,EAJX,eAUA,wBACE,UAAQ,YACRK,KAAK,SACLD,UAAU,SACVE,QAAS,kBAAM,EAAKN,YAAYQ,EAAvB,EAJX,iBAYN,oBAAI,UAAQ,YAAYJ,UAAU,eAAlC,SACGI,MAhCEA,EAHE,UA2CpB,KA9EH,GAAyBE,aCnBzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,Q","file":"static/js/main.9a32a0ff.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string;\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    selectedGood: 'Jam',\n  };\n\n  handleClick = (item: string) => {\n    this.setState({ selectedGood: item });\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n\n        {selectedGood === ''\n          ? <h1 className=\"title\">No goods selected</h1>\n          : (\n            <h1 className=\"title is-flex is-align-items-center\">\n              {`${selectedGood} is selected`}\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"ClearButton\"\n                type=\"button\"\n                className=\"delete ml-3\"\n                onClick={() => {\n                  this.setState({ selectedGood: '' });\n                }}\n              />\n            </h1>\n          )}\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map((good) => (\n              <tr\n                data-cy=\"Good\"\n                key={good}\n                className={classNames({\n                  'has-background-success-light': selectedGood === good,\n                })}\n              >\n                <td>\n\n                  {selectedGood === good\n                    ? (\n                      <button\n                        data-cy=\"RemoveButton\"\n                        type=\"button\"\n                        className=\"button is-info\"\n                        onClick={() => this.handleClick('')}\n                      >\n                        -\n                      </button>\n                    )\n                    : (\n                      <button\n                        data-cy=\"AddButton\"\n                        type=\"button\"\n                        className=\"button\"\n                        onClick={() => this.handleClick(good)}\n\n                      >\n                        +\n                      </button>\n                    )}\n                </td>\n\n                <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                  {good}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n\n/*\nimport { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string[];\n  selectGoodIndex: number;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    selectedGood: goods,\n    selectGoodIndex: 8,\n  };\n\n  componentDidMount() {\n\n  }\n\n  render() {\n    const { selectedGood, selectGoodIndex } = this.state;\n\n    const selectItem = (i: number, target: EventTarget & HTMLButtonElement) => {\n      this.setState({\n        selectGoodIndex: i,\n      });\n      target.classList.add('is-info');\n      target.setAttribute('data-cy', 'RemoveButton');\n    };\n\n    return (\n      <main className=\"section container\">\n\n        {selectGoodIndex === -1\n          ? <h1 className=\"title\">No goods selected</h1>\n          : (\n            <h1 className=\"title is-flex is-align-items-center\">\n              {selectedGood[selectGoodIndex]}\n              {' '}\n              is selected\n\n              <button\n                data-cy=\"ClearButton\"\n                type=\"button\"\n                className=\"delete ml-3\"\n                onClick={() => {\n                  this.setState({ selectGoodIndex: -1 });\n                }}\n              />\n            </h1>\n          )}\n\n        <table className=\"table\">\n          <tbody>\n            {selectedGood.map((good, i) => (\n              <tr data-cy=\"Good\" key={good}>\n                <td>\n                  <button\n                    data-cy=\"AddButton\"\n                    type=\"button\"\n                    className=\"button\"\n                    onClick={(event) => {\n                      const { currentTarget } = event;\n\n                      selectItem(i, currentTarget);\n                    }}\n                  >\n                    +\n                  </button>\n                </td>\n\n                <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                  {good}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n\n*/\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}