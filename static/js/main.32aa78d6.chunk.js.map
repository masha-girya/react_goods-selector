{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","addGood","item","setState","removeGood","this","isEmptySelection","length","className","classNames","type","onClick","map","good","isSelectedGood","Component","ReactDOM","render","document","getElementById"],"mappings":"2PAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAyB,CACvBC,aAAc,OAFlB,EAKEC,QAAU,SAACC,GACT,EAAKC,SAAS,CAAEH,aAAcE,GAC/B,EAPH,EASEE,WAAa,WACX,EAAKD,SAAS,CAAEH,aAAc,IAC/B,EAXH,4CAaE,WAAU,IAAD,OACCA,EAAiBK,KAAKN,MAAtBC,aACFM,EAA2C,IAAxBN,EAAaO,OAEtC,OACE,uBAAMC,UAAU,oBAAhB,UAEE,oBAAIA,UAAWC,IACb,QACA,CAAE,iCAAkCH,IAFtC,SAKGA,EACG,oBAEA,qCACGN,EACA,eAGD,wBACE,UAAQ,cACRU,KAAK,SACLF,UAAU,cACVG,QAASN,KAAKD,kBAMxB,uBAAOI,UAAU,QAAjB,SACE,gCACGX,EAAMe,KAAI,SAACC,GACV,IAAMC,EAAiBd,IAAiBa,EAExC,OACE,qBACE,UAAQ,OAERL,UAAWC,IAAW,CACpB,+BAAgCK,IAJpC,UAOE,6BAEGA,EAEG,wBACE,UAAQ,eACRJ,KAAK,SACLF,UAAU,iBACVG,QAAS,EAAKP,WAJhB,eAUA,wBACE,UAAQ,YACRM,KAAK,SACLF,UAAU,SACVG,QAAS,kBAAM,EAAKV,QAAQY,EAAnB,EAJX,iBAYN,oBAAI,UAAQ,YAAYL,UAAU,eAAlC,SACGK,MAhCEA,EAoCV,UAKV,KA5FH,GAAyBE,aCnBzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,Q","file":"static/js/main.32aa78d6.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string;\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    selectedGood: 'Jam',\n  };\n\n  addGood = (item: string) => {\n    this.setState({ selectedGood: item });\n  };\n\n  removeGood = () => {\n    this.setState({ selectedGood: '' });\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n    const isEmptySelection = selectedGood.length === 0;\n\n    return (\n      <main className=\"section container\">\n\n        <h1 className={classNames(\n          'title',\n          { 'is-flex is-align-items-center': !isEmptySelection },\n        )}\n        >\n          {isEmptySelection\n            ? 'No goods selected'\n            : (\n              <>\n                {selectedGood}\n                {' is selected'}\n\n                {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                <button\n                  data-cy=\"ClearButton\"\n                  type=\"button\"\n                  className=\"delete ml-3\"\n                  onClick={this.removeGood}\n                />\n              </>\n            )}\n        </h1>\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map((good) => {\n              const isSelectedGood = selectedGood === good;\n\n              return (\n                <tr\n                  data-cy=\"Good\"\n                  key={good}\n                  className={classNames({\n                    'has-background-success-light': isSelectedGood,\n                  })}\n                >\n                  <td>\n\n                    {isSelectedGood\n                      ? (\n                        <button\n                          data-cy=\"RemoveButton\"\n                          type=\"button\"\n                          className=\"button is-info\"\n                          onClick={this.removeGood}\n                        >\n                          -\n                        </button>\n                      )\n                      : (\n                        <button\n                          data-cy=\"AddButton\"\n                          type=\"button\"\n                          className=\"button\"\n                          onClick={() => this.addGood(good)}\n\n                        >\n                          +\n                        </button>\n                      )}\n                  </td>\n\n                  <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                    {good}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}